/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  TestUniversalContract,
  TestUniversalContractInterface,
} from "../TestUniversalContract";

const _abi = [
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "gateway",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IGatewayZEVM",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onAbort",
    inputs: [
      {
        name: "abortContext",
        type: "tuple",
        internalType: "struct AbortContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outgoing",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "context",
        type: "tuple",
        internalType: "struct MessageContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "senderEVM",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "registry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICoreRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ContextData",
    inputs: [
      {
        name: "origin",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainID",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "msgSender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "message",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContextDataAbort",
    inputs: [
      {
        name: "abortContext",
        type: "tuple",
        indexed: false,
        internalType: "struct AbortContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outgoing",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContextDataRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        indexed: false,
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f80fd5b50737cce3eb018bf23e1fe2a32692f2c77592d1103946001600160a01b031663cc5ad8b66040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610061573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100859190610096565b6001600160a01b03166080526100c3565b5f602082840312156100a6575f80fd5b81516001600160a01b03811681146100bc575f80fd5b9392505050565b6080516107e96100da5f395f607101526107e95ff3fe608060405260043610610057575f3560e01c80635bcfd6161161003f5780635bcfd616146100db5780637b103999146100fa578063c9028a361461012157005b8063116191b6146100605780632d4cfb7e146100bc57005b3661005e57005b005b34801561006b575f80fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c7575f80fd5b5061005e6100d6366004610218565b610134565b3480156100e6575f80fd5b5061005e6100f536600461027e565b61016e565b348015610105575f80fd5b50610093737cce3eb018bf23e1fe2a32692f2c77592d11039481565b61005e61012f366004610331565b6101e9565b7f7d77d89ce7d68a5bf49d11b7fd7a992caa1c107a4c09b324ada48ee9c21b3db7816040516101639190610416565b60405180910390a150565b606081156101855761018282840184610516565b90505b7fcdc8ee677dc5ebe680fb18cebda5e26ba5ea1f0ba504a47e2a9a2ecb476dc98e6101b08780610606565b6101c060408a0160208b01610667565b896040013533866040516101d996959493929190610680565b60405180910390a1505050505050565b7fd75bb509c8f32a725aac99ac5c4541060dbfb889a3aca8314d6f00395618c4c481604051610163919061072a565b5f60208284031215610228575f80fd5b813567ffffffffffffffff81111561023e575f80fd5b820160c0818503121561024f575f80fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610279575f80fd5b919050565b5f805f805f60808688031215610292575f80fd5b853567ffffffffffffffff8111156102a8575f80fd5b8601606081890312156102b9575f80fd5b94506102c760208701610256565b935060408601359250606086013567ffffffffffffffff8111156102e9575f80fd5b8601601f810188136102f9575f80fd5b803567ffffffffffffffff81111561030f575f80fd5b886020828401011115610320575f80fd5b959894975092955050506020019190565b5f60208284031215610341575f80fd5b813567ffffffffffffffff811115610357575f80fd5b82016080818503121561024f575f80fd5b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261039b575f80fd5b830160208101925035905067ffffffffffffffff8111156103ba575f80fd5b8036038213156103c8575f80fd5b9250929050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081525f6104258384610368565b60c0602085015261043a60e0850182846103cf565b91505073ffffffffffffffffffffffffffffffffffffffff61045e60208601610256565b1660408401525f60408501359050806060850152506060840135801515808214610486575f80fd5b80608086015250505f608085013590508060a0850152506104aa60a0850185610368565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c08601526104df8382846103cf565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60208284031215610526575f80fd5b813567ffffffffffffffff81111561053c575f80fd5b8201601f8101841361054c575f80fd5b803567ffffffffffffffff811115610566576105666104e9565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff821117156105d2576105d26104e9565b6040528181528282016020018610156105e9575f80fd5b816020840160208301375f91810160200191909152949350505050565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610639575f80fd5b83018035915067ffffffffffffffff821115610653575f80fd5b6020019150368190038213156103c8575f80fd5b5f60208284031215610677575f80fd5b61024f82610256565b60a081525f61069360a08301888a6103cf565b73ffffffffffffffffffffffffffffffffffffffff8716602084015285604084015273ffffffffffffffffffffffffffffffffffffffff85166060840152828103608084015283518082528060208601602084015e5f6020828401015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011683010192505050979650505050505050565b6020815273ffffffffffffffffffffffffffffffffffffffff61074c83610256565b16602082015273ffffffffffffffffffffffffffffffffffffffff61077360208401610256565b1660408201525f8060408401359050806060840152506107966060840184610368565b6080808501526107aa60a0850182846103cf565b9594505050505056fea26469706673582212204f6ffbc9299b3bed759199b27883825c616e56269705068b34ac89f3bc91594164736f6c634300081a0033";

type TestUniversalContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniversalContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniversalContract__factory extends ContractFactory {
  constructor(...args: TestUniversalContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestUniversalContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestUniversalContract__factory {
    return super.connect(runner) as TestUniversalContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniversalContractInterface {
    return new Interface(_abi) as TestUniversalContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniversalContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestUniversalContract;
  }
}
