/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ReceiverEVM, ReceiverEVMInterface } from "../ReceiverEVM";

const _abi = [
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "messageContext",
        type: "tuple",
        internalType: "struct MessageContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "messageContext",
        type: "tuple",
        internalType: "struct LegacyMessageContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "onRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveERC20",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveERC20Partial",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveNoParams",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveNonPayable",
    inputs: [
      {
        name: "strs",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "nums",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "flag",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receivePayable",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
      {
        name: "num",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "flag",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "ReceivedERC20",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedNoParams",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedNonPayable",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "strs",
        type: "string[]",
        indexed: false,
        internalType: "string[]",
      },
      {
        name: "nums",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
      {
        name: "flag",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedOnCall",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "message",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedOnCallV2",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "asset",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "message",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedPayable",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "str",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "num",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "flag",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedRevert",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "revertContext",
        type: "tuple",
        indexed: false,
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAmount",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b5060015f55610fb4806100205f395ff3fe608060405260043610610078575f3560e01c8063c51316911161004a578063c5131691146100f0578063c9028a361461010f578063e04d4f971461012e578063f05b6abf1461014157005b806301a6476714610081578063357fc5a2146100aa578063676cc054146100c95780636ed70169146100dc57005b3661007f57005b005b61009461008f366004610787565b610160565b6040516100a19190610829565b60405180910390f35b3480156100b5575f80fd5b5061007f6100c4366004610863565b6101d7565b6100946100d736600461089c565b61026c565b3480156100e7575f80fd5b5061007f6102ad565b3480156100fb575f80fd5b5061007f61010a366004610863565b6102e2565b34801561011a575f80fd5b5061007f6101293660046108d9565b6103ba565b61007f61013c366004610a2e565b6103f6565b34801561014c575f80fd5b5061007f61015b366004610b12565b61043a565b60607f77c91f89244a04200aa9bae5695cacb5a2b6894a33d119ee69184324139feb9c6101906020860186610bf4565b6101a06040870160208801610bf4565b866040013586866040516101b8959493929190610c54565b60405180910390a15060408051602081019091525f81525b9392505050565b6101df61046f565b61020173ffffffffffffffffffffffffffffffffffffffff83163383866104b0565b604080513381526020810185905273ffffffffffffffffffffffffffffffffffffffff848116828401528316606082015290517f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af609181900360800190a161026760015f55565b505050565b60607fd80b62959d9a7e797f352e4015e65d345f402ea21972256fb0ba94f00a35250161029c6020860186610bf4565b84846040516101b893929190610cb0565b6040513381527fbcaadb46b82a48af60b608f58959ae6b8310d1b0a0d094c2e9ec3208ed39f2a09060200160405180910390a1565b6102ea61046f565b5f6102f6600285610ce8565b9050805f03610331576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035373ffffffffffffffffffffffffffffffffffffffff84163384846104b0565b604080513381526020810183905273ffffffffffffffffffffffffffffffffffffffff858116828401528416606082015290517f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af609181900360800190a15061026760015f55565b7f689a5a5cb55e795ffe4cd8b419cd3bb0a3373974c54d25f64e734d7388b93e9b33826040516103eb929190610d20565b60405180910390a150565b7f1f1ff1f5fb41346850b2f5c04e6c767e2f1c8a525c5c0c5cdb60cdf3ca5f62fa333485858560405161042d959493929190610e0e565b60405180910390a1505050565b7f74a53cd528a921fca7dbdee62f86819051d3cc98f214951f4238e8843f20b1463384848460405161042d9493929190610e95565b60025f54036104aa576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f55565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261054590859061054b565b50505050565b5f61056c73ffffffffffffffffffffffffffffffffffffffff8416836105e4565b905080515f1415801561059057508080602001905181019061058e9190610f4d565b155b15610267576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024015b60405180910390fd5b60606101d083835f845f808573ffffffffffffffffffffffffffffffffffffffff1684866040516106159190610f68565b5f6040518083038185875af1925050503d805f811461064f576040519150601f19603f3d011682016040523d82523d5f602084013e610654565b606091505b509150915061066486838361066e565b9695505050505050565b6060826106835761067e826106fd565b6101d0565b81511580156106a7575073ffffffffffffffffffffffffffffffffffffffff84163b155b156106f6576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105db565b50806101d0565b80511561070d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f8083601f840112610752575f80fd5b50813567ffffffffffffffff811115610769575f80fd5b602083019150836020828501011115610780575f80fd5b9250929050565b5f805f838503608081121561079a575f80fd5b60608112156107a7575f80fd5b50839250606084013567ffffffffffffffff8111156107c4575f80fd5b6107d086828701610742565b9497909650939450505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f6101d060208301846107dd565b803573ffffffffffffffffffffffffffffffffffffffff8116811461085e575f80fd5b919050565b5f805f60608486031215610875575f80fd5b833592506108856020850161083b565b91506108936040850161083b565b90509250925092565b5f805f83850360408112156108af575f80fd5b60208112156108bc575f80fd5b50839250602084013567ffffffffffffffff8111156107c4575f80fd5b5f602082840312156108e9575f80fd5b813567ffffffffffffffff8111156108ff575f80fd5b8201608081850312156101d0575f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561098457610984610910565b604052919050565b5f82601f83011261099b575f80fd5b813567ffffffffffffffff8111156109b5576109b5610910565b6109e660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161093d565b8181528460208386010111156109fa575f80fd5b816020850160208301375f918101602001919091529392505050565b801515811461073f575f80fd5b803561085e81610a16565b5f805f60608486031215610a40575f80fd5b833567ffffffffffffffff811115610a56575f80fd5b610a628682870161098c565b935050602084013591506040840135610a7a81610a16565b809150509250925092565b5f67ffffffffffffffff821115610a9e57610a9e610910565b5060051b60200190565b5f82601f830112610ab7575f80fd5b8135610aca610ac582610a85565b61093d565b8082825260208201915060208360051b860101925085831115610aeb575f80fd5b602085015b83811015610b08578035835260209283019201610af0565b5095945050505050565b5f805f60608486031215610b24575f80fd5b833567ffffffffffffffff811115610b3a575f80fd5b8401601f81018613610b4a575f80fd5b8035610b58610ac582610a85565b8082825260208201915060208360051b850101925088831115610b79575f80fd5b602084015b83811015610bba57803567ffffffffffffffff811115610b9c575f80fd5b610bab8b60208389010161098c565b84525060209283019201610b7e565b509550505050602084013567ffffffffffffffff811115610bd9575f80fd5b610be586828701610aa8565b92505061089360408501610a23565b5f60208284031215610c04575f80fd5b6101d08261083b565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff8616815273ffffffffffffffffffffffffffffffffffffffff85166020820152836040820152608060608201525f610ca5608083018486610c0d565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff84168152604060208201525f610cdf604083018486610c0d565b95945050505050565b5f82610d1b577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015273ffffffffffffffffffffffffffffffffffffffff610d5e8361083b565b16604082015273ffffffffffffffffffffffffffffffffffffffff610d856020840161083b565b1660608201525f80604084013590508060808401525060608301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610dcf575f80fd5b830160208101903567ffffffffffffffff811115610deb575f80fd5b803603821315610df9575f80fd5b608060a085015261066460c085018284610c0d565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015260a060408201525f610e4260a08301866107dd565b6060830194909452509015156080909101529392505050565b5f8151808452602084019350602083015f5b82811015610e8b578151865260209586019590910190600101610e6d565b5093949350505050565b5f6080820173ffffffffffffffffffffffffffffffffffffffff871683526080602084015280865180835260a08501915060a08160051b8601019250602088015f5b82811015610f26577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60878603018452610f118583516107dd565b94506020938401939190910190600101610ed7565b505050508281036040840152610f3c8186610e5b565b915050610cdf606083018415159052565b5f60208284031215610f5d575f80fd5b81516101d081610a16565b5f82518060208501845e5f92019182525091905056fea26469706673582212204a1e8b2419e0de483e9f24b5ddc04a3a971986f6fe5246ed9dfcf3d3e9b9d11e64736f6c634300081a0033";

type ReceiverEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReceiverEVM__factory extends ContractFactory {
  constructor(...args: ReceiverEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReceiverEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReceiverEVM__factory {
    return super.connect(runner) as ReceiverEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverEVMInterface {
    return new Interface(_abi) as ReceiverEVMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ReceiverEVM {
    return new Contract(address, _abi, runner) as unknown as ReceiverEVM;
  }
}
